"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "FieldPercent", {
  enumerable: true,
  get: function get() {
    return _Percent.default;
  }
});
Object.defineProperty(exports, "FieldIndexColumn", {
  enumerable: true,
  get: function get() {
    return _IndexColumn.default;
  }
});
Object.defineProperty(exports, "FieldProgress", {
  enumerable: true,
  get: function get() {
    return _Progress.default;
  }
});
Object.defineProperty(exports, "FieldMoney", {
  enumerable: true,
  get: function get() {
    return _Money.default;
  }
});
Object.defineProperty(exports, "FieldDatePicker", {
  enumerable: true,
  get: function get() {
    return _DatePicker.default;
  }
});
Object.defineProperty(exports, "FieldRangePicker", {
  enumerable: true,
  get: function get() {
    return _RangePicker.default;
  }
});
Object.defineProperty(exports, "FieldCode", {
  enumerable: true,
  get: function get() {
    return _Code.default;
  }
});
Object.defineProperty(exports, "FieldTimePicker", {
  enumerable: true,
  get: function get() {
    return _TimePicker.default;
  }
});
Object.defineProperty(exports, "FieldText", {
  enumerable: true,
  get: function get() {
    return _Text.default;
  }
});
Object.defineProperty(exports, "FieldStatus", {
  enumerable: true,
  get: function get() {
    return _Status.default;
  }
});
Object.defineProperty(exports, "FiledSelect", {
  enumerable: true,
  get: function get() {
    return _Select.default;
  }
});
Object.defineProperty(exports, "proFieldParsingText", {
  enumerable: true,
  get: function get() {
    return _Select.proFieldParsingText;
  }
});
Object.defineProperty(exports, "proFieldParsingValueEnumToArray", {
  enumerable: true,
  get: function get() {
    return _Select.proFieldParsingValueEnumToArray;
  }
});
exports.default = exports.defaultRenderText = void 0;

require("antd/es/avatar/style");

var _avatar = _interopRequireDefault(require("antd/es/avatar"));

var _react = _interopRequireDefault(require("react"));

var _proUtils = require("@ant-design/pro-utils");

var _proProvider = require("@ant-design/pro-provider");

var _Percent = _interopRequireDefault(require("./components/Percent"));

var _IndexColumn = _interopRequireDefault(require("./components/IndexColumn"));

var _Progress = _interopRequireDefault(require("./components/Progress"));

var _Money = _interopRequireDefault(require("./components/Money"));

var _DatePicker = _interopRequireDefault(require("./components/DatePicker"));

var _RangePicker = _interopRequireDefault(require("./components/RangePicker"));

var _Code = _interopRequireDefault(require("./components/Code"));

var _TimePicker = _interopRequireDefault(require("./components/TimePicker"));

var _Text = _interopRequireDefault(require("./components/Text"));

var _TextArea = _interopRequireDefault(require("./components/TextArea"));

var _Password = _interopRequireDefault(require("./components/Password"));

var _Status = _interopRequireDefault(require("./components/Status"));

var _Options = _interopRequireDefault(require("./components/Options"));

var _Select = _interopRequireWildcard(require("./components/Select"));

var _Digit = _interopRequireDefault(require("./components/Digit"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * render valueType object
 * @param text string | number
 * @param valueType ProColumnsValueObjectType
 */
var defaultRenderTextByObject = function defaultRenderTextByObject(text, valueType) {
  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    mode: 'read',
    plain: false,
    light: false
  };
  var pickFormItemProps = (0, _proUtils.pickProProps)(props.fieldProps);

  if (valueType.type === 'progress') {
    return /*#__PURE__*/_react.default.createElement(_Progress.default, _extends({}, props, {
      text: text,
      fieldProps: _objectSpread({
        status: valueType.status ? valueType.status : undefined
      }, pickFormItemProps)
    }));
  }

  if (valueType.type === 'money') {
    return /*#__PURE__*/_react.default.createElement(_Money.default, _extends({
      locale: valueType.locale
    }, props, {
      fieldProps: pickFormItemProps,
      text: text
    }));
  }

  if (valueType.type === 'percent') {
    return /*#__PURE__*/_react.default.createElement(_Percent.default, _extends({}, props, {
      text: text,
      showSymbol: valueType.showSymbol,
      precision: valueType.precision,
      fieldProps: pickFormItemProps,
      showColor: valueType.showColor
    }));
  }

  return text;
};
/**
 * 根据不同的类型来转化数值
 * @param text
 * @param valueType
 */


var defaultRenderText = function defaultRenderText(text, valueType, props) {
  if (_typeof(valueType) === 'object') {
    return defaultRenderTextByObject(text, valueType, props);
  }

  var _props$mode = props.mode,
      mode = _props$mode === void 0 ? 'read' : _props$mode,
      emptyText = props.emptyText;

  if (emptyText !== false && mode === 'read' && valueType !== 'option') {
    if (typeof text !== 'boolean' && typeof text !== 'number' && !text) {
      return emptyText || '-';
    }
  }
  /**
   * 如果是金额的值
   */


  if (valueType === 'money') {
    return /*#__PURE__*/_react.default.createElement(_Money.default, _extends({}, props, {
      text: text
    }));
  }
  /**
   *如果是日期的值
   */


  if (valueType === 'date') {
    return /*#__PURE__*/_react.default.createElement(_DatePicker.default, _extends({
      text: text,
      format: "YYYY-MM-DD"
    }, props));
  }
  /**
   *如果是周的值
   */


  if (valueType === 'dateWeek') {
    return /*#__PURE__*/_react.default.createElement(_DatePicker.default, _extends({
      text: text,
      format: "YYYY-wo",
      picker: "week"
    }, props));
  }
  /**
   *如果是月的值
   */


  if (valueType === 'dateMonth') {
    return /*#__PURE__*/_react.default.createElement(_DatePicker.default, _extends({
      text: text,
      format: "YYYY-MM",
      picker: "month"
    }, props));
  }
  /**
   *如果是季度的值
   */


  if (valueType === 'dateQuarter') {
    return /*#__PURE__*/_react.default.createElement(_DatePicker.default, _extends({
      text: text,
      format: "YYYY-\\QQ",
      picker: "quarter"
    }, props));
  }
  /**
   *如果是年的值
   */


  if (valueType === 'dateYear') {
    return /*#__PURE__*/_react.default.createElement(_DatePicker.default, _extends({
      text: text,
      format: "YYYY",
      picker: "year"
    }, props));
  }
  /**
   *如果是日期范围的值
   */


  if (valueType === 'dateRange') {
    return /*#__PURE__*/_react.default.createElement(_RangePicker.default, _extends({
      text: text,
      format: "YYYY-MM-DD"
    }, props));
  }
  /**
   *如果是日期加时间类型的值
   */


  if (valueType === 'dateTime') {
    return /*#__PURE__*/_react.default.createElement(_DatePicker.default, _extends({
      text: text,
      format: "YYYY-MM-DD HH:mm:ss",
      showTime: true
    }, props));
  }
  /**
   *如果是日期加时间类型的值的值
   */


  if (valueType === 'dateTimeRange') {
    // 值不存在的时候显示 "-"
    return /*#__PURE__*/_react.default.createElement(_RangePicker.default, _extends({
      text: text,
      format: "YYYY-MM-DD HH:mm:ss",
      showTime: true
    }, props));
  }
  /**
   *如果是时间类型的值
   */


  if (valueType === 'time') {
    return /*#__PURE__*/_react.default.createElement(_TimePicker.default, _extends({
      text: text,
      format: "HH:mm:ss"
    }, props));
  }

  if (valueType === 'index') {
    return /*#__PURE__*/_react.default.createElement(_IndexColumn.default, null, text + 1);
  }

  if (valueType === 'indexBorder') {
    return /*#__PURE__*/_react.default.createElement(_IndexColumn.default, {
      border: true
    }, text + 1);
  }

  if (valueType === 'progress') {
    return /*#__PURE__*/_react.default.createElement(_Progress.default, _extends({}, props, {
      text: text
    }));
  }
  /** 百分比, 默认展示符号, 不展示小数位 */


  if (valueType === 'percent') {
    return /*#__PURE__*/_react.default.createElement(_Percent.default, _extends({
      text: text
    }, props));
  }

  if (valueType === 'avatar' && typeof text === 'string' && props.mode === 'read') {
    return /*#__PURE__*/_react.default.createElement(_avatar.default, {
      src: text,
      size: 22,
      shape: "circle"
    });
  }

  if (valueType === 'code') {
    return /*#__PURE__*/_react.default.createElement(_Code.default, _extends({
      text: text
    }, props));
  }

  if (valueType === 'jsonCode') {
    return /*#__PURE__*/_react.default.createElement(_Code.default, _extends({
      text: text,
      language: "json"
    }, props));
  }

  if (valueType === 'textarea') {
    return /*#__PURE__*/_react.default.createElement(_TextArea.default, _extends({
      text: text
    }, props));
  }

  if (valueType === 'digit') {
    return /*#__PURE__*/_react.default.createElement(_Digit.default, _extends({
      text: text
    }, props));
  }

  if (valueType === 'select' || props.valueEnum || props.request) {
    return /*#__PURE__*/_react.default.createElement(_Select.default, _extends({
      text: text
    }, props));
  }

  if (valueType === 'option') {
    return /*#__PURE__*/_react.default.createElement(_Options.default, _extends({
      text: text
    }, props));
  }

  if (valueType === 'password') {
    return /*#__PURE__*/_react.default.createElement(_Password.default, _extends({
      text: text
    }, props));
  }

  return /*#__PURE__*/_react.default.createElement(_Text.default, _extends({
    text: text
  }, props));
};

exports.defaultRenderText = defaultRenderText;

var ProField = function ProField(_ref, ref) {
  var _ref$text = _ref.text,
      text = _ref$text === void 0 ? '' : _ref$text,
      _ref$valueType = _ref.valueType,
      valueType = _ref$valueType === void 0 ? 'text' : _ref$valueType,
      onChange = _ref.onChange,
      value = _ref.value,
      rest = _objectWithoutProperties(_ref, ["text", "valueType", "onChange", "value"]);

  var intl = (0, _proProvider.useIntl)();

  var fieldProps = (value || onChange || (rest === null || rest === void 0 ? void 0 : rest.fieldProps)) && _objectSpread({
    value: value,
    onChange: onChange
  }, (0, _proUtils.omitUndefined)(rest === null || rest === void 0 ? void 0 : rest.fieldProps));

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, defaultRenderText(text, valueType, _objectSpread(_objectSpread({}, rest), {}, {
    mode: rest.mode || 'read',
    ref: ref,
    placeholder: intl.getMessage('tableForm.inputPlaceholder', '请输入'),
    fieldProps: (0, _proUtils.pickProProps)(fieldProps)
  })));
};

var _default = _react.default.forwardRef(ProField);

exports.default = _default;