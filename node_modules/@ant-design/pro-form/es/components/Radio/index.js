import "antd/es/radio/style";
import _Radio from "antd/es/radio";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { createField } from '../../BaseForm';
var RadioGroup = _Radio.Group;
var Group = React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      fieldProps = _ref.fieldProps,
      options = _ref.options;

  var renderChildren = function renderChildren() {
    if (options) {
      return /*#__PURE__*/React.createElement(React.Fragment, null, options.map(function (option) {
        if (typeof option === 'string') {
          return /*#__PURE__*/React.createElement(_Radio, {
            key: option,
            value: option
          }, option);
        }

        return /*#__PURE__*/React.createElement(_Radio, {
          disabled: option.disable,
          key: option.value,
          value: option.value
        }, option.label);
      }), children);
    }

    return children;
  };

  return /*#__PURE__*/React.createElement(RadioGroup, _extends({
    ref: ref
  }, fieldProps), renderChildren());
});
/**
 * Radio
 * @param
 */

var ProFormRadio = React.forwardRef(function (_ref2, ref) {
  var fieldProps = _ref2.fieldProps;
  return /*#__PURE__*/React.createElement(_Radio, _extends({}, fieldProps, {
    ref: ref
  }));
}); // @ts-expect-error

var WrappedProFormRadio = createField(ProFormRadio, {
  valuePropName: 'checked',
  ignoreFelidWidth: true
});
WrappedProFormRadio.Group = createField(Group, {
  customLightMode: true,
  ignoreFelidWidth: true
});
WrappedProFormRadio.Button = _Radio.Button;
export default WrappedProFormRadio;