import "antd/es/checkbox/style";
import _Checkbox from "antd/es/checkbox";
import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useContext } from 'react';
import classNames from 'classnames';
import { createField } from '../../BaseForm';
import './index.less';
var Group = React.forwardRef(function (_ref, ref) {
  var _ref$layout = _ref.layout,
      layout = _ref$layout === void 0 ? 'horizontal' : _ref$layout,
      options = _ref.options,
      fieldProps = _ref.fieldProps;

  var _useContext = useContext(_ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var layoutClassName = getPrefixCls('pro-form-checkbox');
  return /*#__PURE__*/React.createElement(_Checkbox.Group, _extends({
    ref: ref
  }, fieldProps, {
    className: classNames(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.className, "".concat(layoutClassName, "-").concat(layout)),
    options: options === null || options === void 0 ? void 0 : options.map(function (option) {
      if (typeof option === 'string') {
        return {
          label: option,
          value: option
        };
      }

      return option;
    })
  }));
});
/**
 * 多选框的
 * @param
 */

var ProFormCheckbox = function ProFormCheckbox(_ref2) {
  var fieldProps = _ref2.fieldProps;
  return /*#__PURE__*/React.createElement(_Checkbox, fieldProps);
};

var WrappedProFormCheckbox = createField(ProFormCheckbox, {
  valuePropName: 'checked',
  ignoreFelidWidth: true
});
WrappedProFormCheckbox.Group = createField(Group);
export default WrappedProFormCheckbox;