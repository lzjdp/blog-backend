import React from 'react';
import { SelectProps } from 'antd/lib/select';
import { ProFormItemProps } from '../../interface';
declare const _default: React.ComponentType<Pick<ProFormItemProps<SelectProps<any>> & {
    valueEnum?: import("@ant-design/pro-utils").ProSchemaValueEnumObj | import("@ant-design/pro-utils").ProSchemaValueEnumMap | undefined;
    request?: import("@ant-design/pro-utils/lib/typing").ProFieldRequestData<{
        key?: string | number | undefined;
        dataIndex?: string | number | React.ReactText[] | undefined;
        valueType?: string | ((entity: unknown, type: import("@ant-design/pro-utils").ProSchemaComponentTypes) => string) | undefined;
        title?: string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | ((schema: any, type: import("@ant-design/pro-utils").ProSchemaComponentTypes, dom: React.ReactNode) => React.ReactNode) | null | undefined;
        tooltip?: string | undefined;
        tip?: string | undefined;
        render?: ((dom: React.ReactNode, entity: unknown, index: number, action: import("@ant-design/pro-utils").ProCoreActionType, schema: any) => React.ReactNode) | undefined;
        renderFormItem?: ((item: any, config: {
            value?: any;
            onChange?: ((value: any) => void) | undefined;
            onSelect?: ((value: any) => void) | undefined;
            type: import("@ant-design/pro-utils").ProSchemaComponentTypes;
            defaultRender: (newItem: any) => JSX.Element | null;
        }, form: import("antd/lib/form").FormInstance<any>) => React.ReactNode) | undefined;
        renderText?: ((text: any, record: unknown, index: number, action: import("@ant-design/pro-utils").ProCoreActionType) => any) | undefined;
        fieldProps?: any;
        valueEnum?: import("@ant-design/pro-utils").ProSchemaValueEnumObj | import("@ant-design/pro-utils").ProSchemaValueEnumMap | undefined;
        request?: import("@ant-design/pro-utils/lib/typing").ProFieldRequestData<any, any> | undefined;
        params?: {
            [key: string]: any;
        } | undefined;
        hideInDescriptions?: boolean | undefined;
    }, any> | undefined;
    options?: import("rc-select/lib/interface").OptionsType | undefined;
    mode?: "multiple" | "tags" | undefined;
    showSearch?: boolean | undefined;
} & import("../../BaseForm").ExtendsProps, "className" | "hidden" | "id" | "placeholder" | "style" | "children" | "onReset" | "disabled" | "name" | "label" | "prefixCls" | "valuePropName" | "bordered" | "validateTrigger" | "preserve" | "secondary" | "colSize" | "tooltip" | "tip" | "dependencies" | "getValueFromEvent" | "normalize" | "rules" | "shouldUpdate" | "trigger" | "validateFirst" | "getValueProps" | "messageVariables" | "initialValue" | "isListField" | "noStyle" | "hasFeedback" | "validateStatus" | "required" | "fieldKey" | "colon" | "htmlFor" | "labelAlign" | "labelCol" | "requiredMark" | "wrapperCol" | "help" | "extra" | "status" | "fieldProps" | "width" | "mode" | "valueEnum" | "options" | "request" | "showSearch">>;
export default _default;
