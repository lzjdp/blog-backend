import React, { ReactElement } from 'react';
import { FormProps, FormInstance } from 'antd/lib/form/Form';
import { FormItemProps } from 'antd/lib/form';
import { TooltipProps } from 'antd/lib/tooltip';
import { ProFieldValueType } from '@ant-design/pro-field';
import { SubmitterProps } from '../components/Submitter';
import { GroupProps, FieldProps, ProFormItemProps } from '../interface';
export interface CommonFormProps {
    submitter?: Omit<SubmitterProps, 'form'> | false;
}
export interface BaseFormProps extends FormProps, CommonFormProps {
    contentRender?: (items: React.ReactNode[], submitter: ReactElement<Omit<SubmitterProps, 'form'>> | undefined) => React.ReactNode;
    fieldProps?: FieldProps;
    dateFormatter?: 'number' | 'string' | false;
    formItemProps?: FormItemProps;
    groupProps?: GroupProps;
    formRef?: React.MutableRefObject<FormInstance | undefined>;
}
export interface ExtendsProps {
    secondary?: boolean;
    bordered?: boolean;
    colSize?: number;
    tooltip?: string;
    /**
     * @deprecated 你可以使用 tooltip，这个更改是为了与 antd 统一
     */
    tip?: string | TooltipProps;
}
declare type ProFormComponent<P, ExtendsProps> = React.ComponentType<Omit<P & ExtendsProps, 'proFieldProps'>>;
export declare type ProFormItemCreateConfig = {
    /**
     * 自定义类型
     */
    valueType?: ProFieldValueType;
    /**
     * 自定义 lightMode
     */
    customLightMode?: boolean;
    /**
     * light mode 自定义的 label 模式
     */
    lightFilterLabelFormatter?: (value: any) => string;
    /**
     * 忽略默认的 felidWidth
     */
    ignoreFelidWidth?: true;
} & FormItemProps;
export declare function createField<P extends ProFormItemProps = any>(Field: React.ComponentType<P> | React.ForwardRefExoticComponent<P>, config?: ProFormItemCreateConfig): ProFormComponent<P, ExtendsProps>;
declare const BaseForm: React.FC<BaseFormProps>;
export default BaseForm;
