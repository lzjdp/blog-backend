import React from 'react';
import { UploadProps } from 'antd/lib/upload';
import { ProFormItemProps } from '../../interface';
export declare type ProFormDraggerProps = ProFormItemProps<UploadProps> & {
    icon?: React.ReactNode;
    title?: React.ReactNode;
    listType?: UploadProps['listType'];
    action?: UploadProps['action'];
    accept?: UploadProps['accept'];
    max?: number;
    value?: UploadProps['fileList'];
    onChange?: UploadProps['onChange'];
};
declare const _default: React.ComponentType<Pick<ProFormItemProps<UploadProps<any>> & {
    icon?: React.ReactNode;
    title?: React.ReactNode;
    listType?: "text" | "picture" | "picture-card" | undefined;
    action?: string | ((file: import("antd/lib/upload").RcFile) => string) | ((file: import("antd/lib/upload").RcFile) => PromiseLike<string>) | undefined;
    accept?: string | undefined;
    max?: number | undefined;
    value?: import("antd/lib/upload/interface").UploadFile<any>[] | undefined;
    onChange?: ((info: import("antd/lib/upload").UploadChangeParam<import("antd/lib/upload/interface").UploadFile<any>>) => void) | undefined;
} & import("../../BaseForm").ExtendsProps, "className" | "hidden" | "id" | "placeholder" | "style" | "title" | "children" | "onChange" | "onReset" | "disabled" | "name" | "value" | "label" | "icon" | "prefixCls" | "valuePropName" | "bordered" | "action" | "validateTrigger" | "preserve" | "secondary" | "colSize" | "tooltip" | "tip" | "dependencies" | "getValueFromEvent" | "normalize" | "rules" | "shouldUpdate" | "trigger" | "validateFirst" | "getValueProps" | "messageVariables" | "initialValue" | "isListField" | "noStyle" | "hasFeedback" | "validateStatus" | "required" | "fieldKey" | "colon" | "htmlFor" | "labelAlign" | "labelCol" | "requiredMark" | "wrapperCol" | "help" | "extra" | "status" | "fieldProps" | "width" | "accept" | "max" | "listType">>;
export default _default;
