import React from 'react';
import { SearchProps } from 'antd/lib/input';
import { ListToolBarProps } from '../ListToolBar';
import { UseFetchDataAction, RequestData } from '../../useFetchData';
import './index.less';
export interface OptionConfig<T> {
    density?: boolean;
    fullScreen?: OptionsType<T>;
    reload?: OptionsType<T>;
    setting?: boolean;
    search?: (SearchProps & {
        name?: string;
    }) | boolean;
}
export declare type OptionsType<T = unknown> = ((e: React.MouseEvent<HTMLSpanElement>, action?: UseFetchDataAction<RequestData<T>>) => void) | boolean;
export interface ToolBarProps<T = unknown> {
    headerTitle?: React.ReactNode;
    tooltip?: string;
    /**
     * @deprecated 你可以使用 tooltip，这个更改是为了与 antd 统一
     */
    tip?: string;
    toolbar?: ListToolBarProps;
    toolBarRender?: (action: UseFetchDataAction<RequestData<T>>, rows: {
        selectedRowKeys?: (string | number)[];
        selectedRows?: T[];
    }) => React.ReactNode[];
    action: UseFetchDataAction<RequestData<T>>;
    options?: OptionConfig<T> | false;
    selectedRowKeys?: (string | number)[];
    selectedRows?: T[];
    className?: string;
    onSearch?: (keyWords: string) => void;
}
declare const ToolBar: <T, U = {}>({ headerTitle, tooltip, toolBarRender, action, options: propsOptions, selectedRowKeys, selectedRows, toolbar, onSearch, ...rest }: ToolBarProps<T>) => JSX.Element;
export default ToolBar;
